################
# <타입> : <제목> 의 형식으로 제목을 아래 공백줄에 작성
# 예) feat : 로그인 기능 추가 
# == 5번째 line에 <타입> : <제목> 작성 ==

# 바로 아래 공백은 지우지 마세요 (제목과 본문의 분리를 위함)

################
# 본문(구체적인 내용)을 아랫줄에 작성(각 행은 72글자 내로 제한)
# 여러 줄의 메시지를 작성할 땐 "-"로 구분 (한 줄은 72자 이내)
# 12번째 line에 본문 작성

################
# 꼬릿말(footer)을 아랫줄에 작성 (현재 커밋과 관련된 이슈 번호 추가 등)
# 예) Close #7
# == 16번째 line에 꼬릿말 작성 ==

################
# git Commit Type List
# feat : 새로운 기능 추가
# fix : 버그 수정
# docs : 문서 수정
# test : 테스트 코드 추가
# refact : 코드 리팩토링
# style : 코드 의미에 영향을 주지 않는 변경사항
# chore : 빌드 부분 혹은 패키지 매니저 수정사항
################
################
# ------------------
#     *git commit 메시지 규칙* 
#
#     제목과 본문을 빈 행으로 구분
#     제목을 50글자 이내로 제한
#     제목의 첫 글자는 대문자로 작성
#     제목의 끝에는 마침표를 넣지 않는다.
#     제목은 명령문으로! ...
#     본문의 각 행은 72글자 내로 제한.
#     어떻게 보다는 무엇과 왜를 설명.
# ------------------
################
#참고자료이니 보면서 하세요
#https://velog.io/@bky373/Git-%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%8B%9C%EC%A7%80-%ED%85%9C%ED%94%8C%EB%A6%BF#%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%8B%9C%EC%A7%80-%ED%85%9C%ED%94%8C%EB%A6%BF